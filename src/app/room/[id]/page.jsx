"use client"

import { useState, useEffect, use } from 'react';
import { useRouter } from 'next/navigation';
import { 
  MapPin, Users, Bath, Bed, Wifi, Car, Utensils, Waves,
  Heart, Share2, MessageCircle, ChevronLeft, CheckCircle2
} from 'lucide-react';
import Button from '@/app/components/Button';
import StarRating from '@/app/components/StarRating';
import { mockRooms } from '@/app/data/mockData';

export default function RoomDetailPage({ params }) {
  const router = useRouter();
  const [room, setRoom] = useState(null);
  const [loading, setLoading] = useState(true);
  
  // ‡πÉ‡∏ä‡πâ React.use() ‡πÄ‡∏û‡∏∑‡πà‡∏≠ unwrap params Promise
  const resolvedParams = use(params);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
  useEffect(() => {
    const loadRoom = async () => {
      setLoading(true);
      try {
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // ‡πÅ‡∏õ‡∏•‡∏á id ‡πÄ‡∏õ‡πá‡∏ô number ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• mock
        const roomId = parseInt(resolvedParams.id);
        const foundRoom = mockRooms.find(r => r.id === roomId);
        
        setRoom(foundRoom);
      } catch (error) {
        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å:', error);
        setRoom(null);
      } finally {
        setLoading(false);
      }
    };
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ id ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (resolvedParams?.id) {
      loadRoom();
    }
  }, [resolvedParams.id]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô LINE
  const handleLineContact = () => {
    if (!room) return;
    
    const message = encodeURIComponent(
      `üè® ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ú‡∏°/‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏™‡∏ô‡πÉ‡∏à‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å "${room.name}"\n\n` +
        `üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: ${room.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏∑‡∏ô\n` +
        `üõèÔ∏è ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô: ${room.bedrooms} ‡∏´‡πâ‡∏≠‡∏á\n` +
        `üöø ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥: ${room.bathrooms} ‡∏´‡πâ‡∏≠‡∏á\n` +
        `üë• ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: ${room.maxGuests} ‡∏Ñ‡∏ô\n` +
        `üìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${room.location}\n\n` +
        `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡∏ö üôè`
    );

    window.open(
      `https://line.me/R/oaMessage/@poolvillaresort/?${message}`,
      "_blank"
    );
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
  const handleShare = () => {
    if (!room) return;
    
    if (navigator.share) {
      navigator.share({
        title: room.name,
        text: `‡∏î‡∏π‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏™‡∏ß‡∏¢‡πÜ ‡∏ô‡∏µ‡πâ‡∏™‡∏¥ - ${room.name} ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á ${room.price.toLocaleString()} ‡∏ö‡∏≤‡∏ó/‡∏Ñ‡∏∑‡∏ô`,
        url: window.location.href,
      }).catch((error) => {
        console.log('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå:', error);
      });
    } else {
      // Fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
      if (navigator.clipboard) {
        navigator.clipboard.writeText(window.location.href).then(() => {
          alert("‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡πâ‡∏ß!");
        }).catch(() => {
          alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡πÑ‡∏î‡πâ");
        });
      } else {
        alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå");
      }
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
  const handleToggleFavorite = () => {
    if (!room) return;
    
    // ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage ‡∏´‡∏£‡∏∑‡∏≠ database
    console.log('‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á:', room.name);
    alert('‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏•‡πâ‡∏ß (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)');
  };

  // ‡πÅ‡∏™‡∏î‡∏á Loading
  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4" />
          <p className="text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å...</p>
        </div>
      </div>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
  if (!room) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8">
        <div className="max-w-3xl mx-auto text-center">
          <div className="bg-white rounded-2xl shadow-lg p-8">
            <h1 className="text-2xl font-bold text-gray-900 mb-4">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å</h1>
            <p className="text-gray-600 mb-6">‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≠‡∏á‡∏´‡∏≤</p>
            <Button 
              onClick={() => router.push('/')}
              className="inline-flex items-center"
            >
              <ChevronLeft className="w-4 h-4 mr-2" />
              ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
            </Button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      {/* Header - ‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
      <div className="sticky top-0 bg-white/95 backdrop-blur-sm shadow-lg border-b border-blue-100 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <Button 
            variant="ghost" 
            onClick={() => router.push('/')}
            className="inline-flex items-center hover:bg-blue-50"
          >
            <ChevronLeft className="w-5 h-5 mr-2" />
            ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </Button>
        </div>
      </div>

      {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          
          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
          <div className="space-y-4">
            <div className="aspect-[4/3] rounded-2xl overflow-hidden shadow-lg">
              <img 
                src={room.mainImage} 
                alt={room.name}
                className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                onError={(e) => {
                  e.target.src = 'https://via.placeholder.com/800x600?text=‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û';
                }}
              />
            </div>
            
            {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
            {room.additionalImages && room.additionalImages.length > 0 && (
              <div className="grid grid-cols-3 gap-2">
                {room.additionalImages.slice(0, 3).map((image, index) => (
                  <div key={index} className="aspect-square rounded-lg overflow-hidden">
                    <img 
                      src={image} 
                      alt={`${room.name} - ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà ${index + 2}`}
                      className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                    />
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å */}
          <div className="space-y-6">
            
            {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
            <div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">{room.name}</h1>
              <div className="flex items-center text-gray-600">
                <MapPin className="w-5 h-5 mr-2 text-blue-500" />
                <span>{room.location}</span>
              </div>
            </div>

            {/* ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß */}
            <StarRating rating={room.averageRating} totalReviews={room.totalReviews} />

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å */}
            <div className="grid grid-cols-3 gap-4 p-4 bg-white rounded-xl shadow-sm">
              <div className="text-center">
                <Bed className="w-6 h-6 mx-auto text-blue-500 mb-2" />
                <div className="text-sm text-gray-600">{room.bedrooms} ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô</div>
              </div>
              <div className="text-center">
                <Bath className="w-6 h-6 mx-auto text-blue-500 mb-2" />
                <div className="text-sm text-gray-600">{room.bathrooms} ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥</div>
              </div>
              <div className="text-center">
                <Users className="w-6 h-6 mx-auto text-blue-500 mb-2" />
                <div className="text-sm text-gray-600">‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö {room.maxGuests} ‡∏Ñ‡∏ô</div>
              </div>
            </div>

            {/* ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å */}
            <div className="p-4 bg-white rounded-xl shadow-sm">
              <h3 className="font-semibold text-gray-900 mb-4">‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                {room.amenities.map((amenity, index) => (
                  <div key={index} className="flex items-center text-gray-600">
                    <CheckCircle2 className="w-5 h-5 text-green-500 mr-3 flex-shrink-0" />
                    <span className="text-sm">{amenity.name}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤ */}
            <div className="p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-100">
              <div className="text-3xl font-bold text-gray-900 mb-2">
                ‡∏ø{room.price.toLocaleString()}
                <span className="text-base font-normal text-gray-600 ml-2">/‡∏Ñ‡∏∑‡∏ô</span>
              </div>
              <p className="text-blue-600 text-sm">‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°‡∏†‡∏≤‡∏©‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß</p>
              
              {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å */}
              <div className="mt-3">
                {room.isAvailable ? (
                  <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                    <div className="w-2 h-2 bg-green-400 rounded-full mr-2"></div>
                    ‡∏´‡πâ‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
                  </span>
                ) : (
                  <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800">
                    <div className="w-2 h-2 bg-red-400 rounded-full mr-2"></div>
                    ‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á
                  </span>
                )}
              </div>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
            <div className="flex gap-3">
              <Button 
                variant="primary" 
                onClick={handleLineContact}
                disabled={!room.isAvailable}
                className="flex-1 bg-green-600 hover:bg-green-700 disabled:bg-gray-300"
              >
                <MessageCircle className="w-5 h-5 mr-2" />
                {room.isAvailable ? '‡∏à‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô LINE' : '‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á'}
              </Button>
              
              <Button 
                variant="outline" 
                onClick={handleShare}
                className="px-4 hover:bg-blue-50"
                title="‡πÅ‡∏ä‡∏£‡πå‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å"
              >
                <Share2 className="w-5 h-5" />
              </Button>
              
              <Button 
                variant="outline" 
                onClick={handleToggleFavorite}
                className="px-4 hover:bg-red-50"
                title="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î"
              >
                <Heart className="w-5 h-5" />
              </Button>
            </div>
          </div>
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
        <div className="mt-12 bg-white rounded-2xl shadow-lg p-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-3">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å</h3>
              <ul className="space-y-2 text-gray-600">
                <li>‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô: {room.bedrooms} ‡∏´‡πâ‡∏≠‡∏á</li>
                <li>‚Ä¢ ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥: {room.bathrooms} ‡∏´‡πâ‡∏≠‡∏á</li>
                <li>‚Ä¢ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏û‡∏±‡∏Å: ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î {room.maxGuests} ‡∏Ñ‡∏ô</li>
                <li>‚Ä¢ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß: {room.averageRating}/5 ‡∏à‡∏≤‡∏Å {room.totalReviews} ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß</li>
              </ul>
            </div>
            
            <div>
              <h3 className="text-lg font-semibold text-gray-900 mb-3">‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</h3>
              <div className="space-y-3">
                <p className="text-gray-600">
                  ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô LINE
                </p>
                <Button 
                  variant="outline" 
                  onClick={handleLineContact}
                  className="w-full"
                >
                  <MessageCircle className="w-4 h-4 mr-2" />
                  ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô LINE
                </Button>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}